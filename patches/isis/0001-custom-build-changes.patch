diff -ruN IsisCMake/CMakeLists.txt isis-git/CMakeLists.txt
--- IsisCMake/CMakeLists.txt	2017-04-12 17:01:28.000000000 -0700
+++ isis-git/CMakeLists.txt	2017-04-11 22:30:42.000000000 -0700
@@ -5,7 +5,7 @@
 
 # Specify the required version of CMake.  If your machine does not
 #  have this, it should be easy to build from https://cmake.org/download/
-cmake_minimum_required(VERSION 3.3)
+cmake_minimum_required(VERSION 3.2)
 
 # Point cmake to our other CMake files.
 list(APPEND CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/cmake")
@@ -68,6 +68,7 @@
 option(buildCore       "Build the core ISIS modules"        ON)
 option(buildMissions   "Build the mission specific modules" ON)
 option(buildStaticCore "Build libisis3 static as well as dynamic" OFF)
+option(buildApps       "Build applications." ON)
 option(buildTests      "Set up unit, application, and module tests." ON)
 
 if(EXISTS ${isis3Data})
@@ -148,7 +149,7 @@
 endif()
 
 # Add a config file to the install bin directory so that QT can find the plugin libraries.
-file(WRITE "${CMAKE_BINARY_DIR}/qt.conf" "[Paths]\nPlugins=../3rdParty/plugins/\n")
+file(WRITE "${CMAKE_BINARY_DIR}/qt.conf" "[Paths]\nPlugins=../lib/plugins/\n")
 install(FILES "${CMAKE_BINARY_DIR}/qt.conf" DESTINATION ${CMAKE_INSTALL_PREFIX}/bin)
 
 # Some tests rely on a hardcoded path to $ISISROOT/bin, so set up a 
@@ -172,7 +173,7 @@
 add_subdirectory(src)
 
 # Set up third party libraries for installation
-install_third_party()
+#install_third_party()
 
 # Some tests rely on a hardcoded path to $ISISROOT/lib, so set up a 
 #  link to make that work.
Binary files IsisCMake/cmake/.FindAllDependencies.cmake.swp and isis-git/cmake/.FindAllDependencies.cmake.swp differ
diff -ruN IsisCMake/cmake/AddIsisModule.cmake isis-git/cmake/AddIsisModule.cmake
--- IsisCMake/cmake/AddIsisModule.cmake	2017-04-12 17:01:28.000000000 -0700
+++ isis-git/cmake/AddIsisModule.cmake	2017-04-11 23:00:09.000000000 -0700
@@ -151,7 +151,7 @@
   # Always pass the test and truth files to the caller
   set(newTestFiles   ${thisTestFiles}   PARENT_SCOPE)
   set(newTruthFiles  ${thisTruthFiles}  PARENT_SCOPE)
-  
+
   list(LENGTH plugins numPlugins)
   if(${numPlugins} EQUAL 0)
     # No plugins, pass the source files back to the caller to add to the larger library.
@@ -273,10 +273,12 @@
     
   endif()
  
-  # Process the apps (core library always required)
-  foreach(f ${appFolders})
-    add_isis_app(${f} "${reqLibs}")
-  endforeach()
+  if(${buildApps})
+    # Process the apps (core library always required)
+    foreach(f ${appFolders})
+      add_isis_app(${f} "${reqLibs}")
+    endforeach()
+  endif()
 
   if(${buildTests})  
     # Process the tests
diff -ruN IsisCMake/cmake/CMakeLists.txt isis-git/cmake/CMakeLists.txt
--- IsisCMake/cmake/CMakeLists.txt	2017-04-12 17:01:28.000000000 -0700
+++ isis-git/cmake/CMakeLists.txt	2017-04-11 22:19:11.000000000 -0700
@@ -11,7 +11,7 @@
 
 # On OSX, need to correct all the paths encoded in each of the distributed library files so
 #  that they properly find the distruted files using relative paths.
-if (APPLE)
+if (OFF)
   # Call the correction script on each folder containing libraries
   install(CODE "EXECUTE_PROCESS(COMMAND python ${CMAKE_SOURCE_DIR}/scripts/finalizeInstalledOsxRpaths.py ${CMAKE_INSTALL_PREFIX}/lib)")
   install(CODE "EXECUTE_PROCESS(COMMAND python ${CMAKE_SOURCE_DIR}/scripts/finalizeInstalledOsxRpaths.py ${CMAKE_INSTALL_PREFIX}/3rdParty/lib resetRpath)")
diff -ruN IsisCMake/cmake/FindAllDependencies.cmake isis-git/cmake/FindAllDependencies.cmake
--- IsisCMake/cmake/FindAllDependencies.cmake	2017-04-12 17:01:28.000000000 -0700
+++ isis-git/cmake/FindAllDependencies.cmake	2017-04-12 16:16:19.000000000 -0700
@@ -6,7 +6,7 @@
 
 # Specify top level directories
 
-set(thirdPartyDir "${CMAKE_SOURCE_DIR}/3rdParty")
+set(thirdPartyDir "${CMAKE_SOURCE_DIR}/../../../install")
 
 set(INCLUDE_DIR "${thirdPartyDir}/include")
 set(LIB_DIR     "${thirdPartyDir}/lib")
@@ -28,7 +28,7 @@
 #set(LATEX   "/usr/bin/latex") # MISSING
 # Also need the DOT tool for doxygen.
 
-verify_file_exists(${XALAN})
+#verify_file_exists(${XALAN})
 #verify_file_exists(${LATEX})
 #verify_file_exists(${DOXYGEN})
 
@@ -39,7 +39,8 @@
 # Set up for Qt
 #---------------------------------------------------------------------------
 # *Most* of the folders in the main QT folder are needed as an include directory
-set(qtDir "${INCLUDE_DIR}/qt/qt5.6.0")
+#set(qtDir "${INCLUDE_DIR}/qt/qt5.6.0")
+set(qtDir "${INCLUDE_DIR}")
 set(qtIncludes  Qt
                 QtCore
                 QtAssistant
@@ -59,9 +60,9 @@
-                QtSensors
+                #QtSensors
                 QtSql
                 QtSvg
                 QtTest
-                QtWebChannel
-                QtWebEngine
-                QtWebEngineWidgets
+                #QtWebChannel
+                #QtWebEngine
+                #QtWebEngineWidgets
                 QtWidgets
                 QtXml
@@ -76,37 +77,44 @@
 
 if(APPLE)
 
-  set(QTLIBDIR ${LIB_DIR}/qt5)
+  set(QTLIBDIR ${LIB_DIR})
+
+  set(QTLIB    -lQt5Core -lQt5Concurrent -lQt5XmlPatterns -lQt5Xml -lQt5Network -lQt5Sql -lQt5Gui -lQt5PrintSupport -lQt5Positioning -lQt5Qml -lQt5Quick  -lQt5Svg -lQt5Test -lQt5OpenGL -lQt5Widgets -lQt5Multimedia -lQt5MultimediaWidgets -lQt5DBus)
 
-  # Use find_library cmake function to find the QT frameworks
-  set(QTLIB)
   set(QT_DYNAMIC_LIBS)
-  set(qtLibNames QtXmlPatterns QtXml QtNetwork
-                 QtSql QtGui QtCore QtSvg 
-                 QtTest QtWebKit QtOpenGL 
-                 QtConcurrent QtDBus 
-                 QtMultimedia QtMultimediaWidgets 
-                 QtNfc QtPositioning QtPrintSupport 
-                 QtQml QtQuick QtQuickParticles 
-                 QtQuickTest QtQuickWidgets QtScript 
-                 QtScriptTools QtSensors QtSerialPort 
-                 QtWebKitWidgets QtWebSockets QtWidgets 
-                 QtTest QtWebChannel QtWebEngine QtWebEngineCore QtWebEngineWidgets)
-  foreach(qtName ${qtLibNames})
-    set(temp "${qtName}-NOTFOUND") # Work around CMake bug!
-    find_library(temp ${qtName} PATHS ${QTLIBDIR})
-    # Update link and lib list in the loop
-    set(QTLIB ${QTLIB} ${temp})
-    set(QT_DYNAMIC_LIBS ${QT_DYNAMIC_LIBS} ${QTLIBDIR}/${qtName}.framework)
+  set(QT_DYNAMIC_IN  ${QTLIBDIR}/libQt5Concurrent
+                   ${QTLIBDIR}/libQt5Core
+                   ${QTLIBDIR}/libQt5DBuso
+                   ${QTLIBDIR}/libQt5Gui
+                   ${QTLIBDIR}/libQt5Multimedia
+                   ${QTLIBDIR}/libQt5MultimediaWidgets
+                   ${QTLIBDIR}/libQt5Network
+                   ${QTLIBDIR}/libQt5OpenGL
+                   ${QTLIBDIR}/libQt5Positioning
+                   ${QTLIBDIR}/libQt5PrintSupport
+                   ${QTLIBDIR}/libQt5Qml
+                   ${QTLIBDIR}/libQt5Quick
+                   #${QTLIBDIR}/libQt5Sensors
+                   ${QTLIBDIR}/libQt5Sql
+                   ${QTLIBDIR}/libQt5Svg
+                   ${QTLIBDIR}/libQt5Test
+                   #${QTLIBDIR}/libQt5WebChannel
+                   #${QTLIBDIR}/libQt5WebEngineCore
+                   #${QTLIBDIR}/libQt5WebEngine
+                   #${QTLIBDIR}/libQt5WebEngineWidgets
+                   ${QTLIBDIR}/libQt5Widgets
+                   ${QTLIBDIR}/libQt5XcbQpa
+                   ${QTLIBDIR}/libQt5Xml
+                   ${QTLIBDIR}/libQt5XmlPatterns)
+  foreach(f ${QT_DYNAMIC_IN})
+    set(QT_DYNAMIC_LIBS ${QT_DYNAMIC_LIBS} ${f}.dylib ${f}.5.dylib ${f}.5.6.dylib ${f}.5.6.2.dylib)
   endforeach()
-  
-  set(QTLIBDIR ${QT_DYNAMIC_LIBS}) # The same in this case since frameworks are folders
 
 else() # Linux
 
   set(QTLIBDIR ${LIB_DIR})
 
-  set(QTLIB    -lQt5Core -lQt5Concurrent -lQt5XmlPatterns -lQt5Xml -lQt5Network -lQt5Sql -lQt5Gui -lQt5PrintSupport -lQt5Positioning -lQt5Qml -lQt5Quick -lQt5Sensors -lQt5Svg -lQt5Test -lQt5OpenGL -lQt5Widgets -lQt5Multimedia -lQt5MultimediaWidgets -lQt5WebChannel -lQt5WebEngine -lQt5WebEngineCore -lQt5WebEngineWidgets -lQt5DBus)
+  set(QTLIB    -lQt5Core -lQt5Concurrent -lQt5XmlPatterns -lQt5Xml -lQt5Network -lQt5Sql -lQt5Gui -lQt5PrintSupport -lQt5Positioning -lQt5Qml -lQt5Quick -lQt5Svg -lQt5Test -lQt5OpenGL -lQt5Widgets -lQt5Multimedia -lQt5MultimediaWidgets -lQt5DBus)
 
   set(QT_DYNAMIC_LIBS)
   set(QT_DYNAMIC_IN  ${QTLIBDIR}/libQt5Concurrent.so
@@ -124,16 +132,16 @@
-                   ${QTLIBDIR}/libQt5Sensors.so
+                   #${QTLIBDIR}/libQt5Sensors.so
                    ${QTLIBDIR}/libQt5Sql.so
                    ${QTLIBDIR}/libQt5Svg.so
                    ${QTLIBDIR}/libQt5Test.so
-                   ${QTLIBDIR}/libQt5WebChannel.so
-                   ${QTLIBDIR}/libQt5WebEngineCore.so
-                   ${QTLIBDIR}/libQt5WebEngine.so
-                   ${QTLIBDIR}/libQt5WebEngineWidgets.so
+                   #${QTLIBDIR}/libQt5WebChannel.so
+                   #${QTLIBDIR}/libQt5WebEngineCore.so
+                   #${QTLIBDIR}/libQt5WebEngine.so
+                   #${QTLIBDIR}/libQt5WebEngineWidgets.so
                    ${QTLIBDIR}/libQt5Widgets.so
                    ${QTLIBDIR}/libQt5XcbQpa.so
                    ${QTLIBDIR}/libQt5Xml.so
                    ${QTLIBDIR}/libQt5XmlPatterns.so)
   foreach(f ${QT_DYNAMIC_IN})
-    set(QT_DYNAMIC_LIBS ${QT_DYNAMIC_LIBS} ${f} ${f}.5 ${f}.5.6 ${f}.5.6.0)
+    set(QT_DYNAMIC_LIBS ${QT_DYNAMIC_LIBS} ${f} ${f}.5 ${f}.5.6 ${f}.5.6.2)
   endforeach()
 endif()
@@ -159,7 +167,7 @@
 
 if(APPLE)
 
-  set(QWTLIBDIR ${LIB_DIR}/qwt)
+  set(QWTLIBDIR ${LIB_DIR})
 
   # Use dedicated cmake code to find the QT frameworks
   find_library(frameQwt Qwt PATHS ${QWTLIBDIR})
@@ -209,10 +217,10 @@
 set(NAIFINCDIR "${INCLUDE_DIR}/naif")
 set(NAIFLIBDIR "${LIB_DIR}")
 if(APPLE)
-  set(NAIFLIB    "-ldsklib -lcspice")
+  set(NAIFLIB    "-lcspice")
-  set(NAIF_DYNAMIC_LIBS ${NAIFLIBDIR}/libdsklib${end} ${NAIFLIBDIR}/libcspice${end})
+  set(NAIF_DYNAMIC_LIBS ${NAIFLIBDIR}/libcspice${end})
 else()
-  set(NAIFLIB    "-ldsk -lcspice")
+  set(NAIFLIB    "-lcspice")
-  set(NAIF_DYNAMIC_LIBS ${NAIFLIBDIR}/libdsk${end} ${NAIFLIBDIR}/libcspice${end})
+  set(NAIF_DYNAMIC_LIBS ${NAIFLIBDIR}/libcspice${end})
 endif()
 
@@ -236,7 +244,7 @@
 #---------------------------------------------------------------------------
 set(GEOSINCDIR ${INCLUDE_DIR}/geos ${INCLUDE_DIR}/geos/geos3.5.0)
 set(GEOSLIBDIR "${LIB_DIR}")
-set(GEOSLIB    "-lgeos-3.5.0 -lgeos_c")
+set(GEOSLIB    "-lgeos -lgeos_c")
 if(APPLE)
   set(GEOS_DYNAMIC_LIBS ${GEOSLIBDIR}/libgeos*.dylib ${GEOSLIBDIR}/libgeos_c*.dylib)
 else() # Linux
@@ -278,10 +286,10 @@
 set(SUPERLUINCDIR ${INCLUDE_DIR}/superlu  ${INCLUDE_DIR}/superlu/superlu4.3)
 set(SUPERLULIBDIR "${LIB_DIR}")
 if(APPLE)
-  set(SUPERLULIB    -lsuperlu_4.3)
+  set(SUPERLULIB    -lsuperlu -lblas)
   set(SUPERLU_DYNAMIC_LIBS ${SUPERLULIBDIR}/libsuperlu.dylib ${SUPERLULIBDIR}/libsuperlu_*.dylib)
 else()
-  set(SUPERLULIB    -lsuperlu_4.3 -lblas -lgfortran) # Must install packages libblas-dev and gfortran
+  set(SUPERLULIB    -lsuperlu -lblas -lgfortran) # Must install packages libblas-dev and gfortran
   set(SUPERLU_DYNAMIC_LIBS ${SUPERLULIBDIR}/libsuperlu_*.so ${SUPERLULIBDIR}/libblas.so.* ${SUPERLULIBDIR}/libgfortran.so.*)
 endif()
 
@@ -323,7 +331,7 @@
 #---------------------------------------------------------------------------
 # Set up for BOOST
 #---------------------------------------------------------------------------
-set(BOOSTINCDIR ${INCLUDE_DIR}/boost  ${INCLUDE_DIR}/boost/boost1.59.0)
+set(BOOSTINCDIR ${INCLUDE_DIR}/boost  ${INCLUDE_DIR}/boost/boost1.59.0 ${INCLUDE_DIR}/boost-1_59)
 set(BOOSTLIB)
 
 
@@ -335,1 +343,1 @@
-set(CHOLMODLIB    -lcholmod -lamd -lcamd -lccolamd -lcolamd -lsuitesparseconfig)
+set(CHOLMODLIB    -lcholmod -lamd -lcamd -lccolamd -lcolamd -lsuitesparseconfig -llapack)
@@ -358,7 +366,7 @@
 set(OPENCVLIB     -lopencv_calib3d -lopencv_core -lopencv_features2d -lopencv_xfeatures2d
                   -lopencv_flann -lopencv_highgui -lopencv_imgproc -lopencv_imgcodecs 
                   -lopencv_ml -lopencv_objdetect -lopencv_photo -lopencv_stitching 
-                  -lopencv_superres  -lopencv_video -lopencv_videostab)
+                  -lopencv_superres  -lopencv_video)
 if(APPLE)
   set(OPENCV_DYNAMIC_LIBS ${OPENCVLIBDIR}/libopencv_*.dylib ${OPENCVLIBDIR}/libavcodec${end} 
                           ${OPENCVLIBDIR}/libavformat${end} ${OPENCVLIBDIR}/libavutil${end})
@@ -378,7 +386,6 @@
 set(NNLIBDIR ${LIB_DIR})
 set(NNLIB    "-lnn")
 
-
 #---------------------------------------------------------------------------
 #  Define the third party distribution libraries (patterns)
 #---------------------------------------------------------------------------
@@ -475,10 +482,10 @@
     libicudata*.dylib
     # libgeotiff depends on these libraries
     libproj*.dylib)
-
+  set(extras)
 else() # Linux
-  
-  set(extras libtbb.so*)
+  set(extras libz.so* libpng.so*)
+  #set(extras libtbb.so*)
 endif()
 
 set(EXTRALIBDIR ${LIB_DIR})
@@ -572,7 +579,8 @@
                 ${OPENCVINCDIR}
                 ${NNINCDIR}
                 ${DEFAULTINCDIR}
-                ${GMMINCDIR})
+                ${GMMINCDIR}
+                ${INCLUDE_DIR})
 
 set(ALLLIBDIRS  ${XTRALIBDIRS}
                 ${ISISLIBDIR}
@@ -592,7 +600,8 @@
                 ${CHOLMODLIBDIR}
                 ${HDF5LIBDIR}
                 ${SUPERLULIBDIR}
-                ${GMMLIBDIR})
+                ${GMMLIBDIR}
+                ${LIB_DIR})
 
 set(ALLLIBS   ${ISISLIB}
               ${ISISSYSLIBS}
@@ -615,8 +624,8 @@
               ${HDF5LIB}
               ${SUPERLULIB}
               ${GMMLIB}
-              ${NNLIB}
-              ${OPENCVLIB})
+#              ${NNLIB}
+              ${OPENCVLIB} -lz -lpng)
 
 # Only include Kakadu if it is available
 if(${JP2KFLAG} EQUAL "1")
diff -ruN IsisCMake/cmake/Utilities.cmake isis-git/cmake/Utilities.cmake
--- IsisCMake/cmake/Utilities.cmake	2017-04-12 17:01:28.000000000 -0700
+++ isis-git/cmake/Utilities.cmake	2017-04-11 22:19:11.000000000 -0700
@@ -230,7 +230,7 @@
     # Compare this file extension to list of accepted header file extensions
     if( extensionLower STREQUAL ".h" OR extensionLower STREQUAL ".hpp" OR extensionLower STREQUAL ".tcc")
       set(fullPath "${CMAKE_CURRENT_SOURCE_DIR}/${f}")
-      INSTALL(FILES ${f} DESTINATION inc)
+      INSTALL(FILES ${f} DESTINATION include)
     endif()
   endforeach(f)
 
diff -ruN IsisCMake/src/CMakeLists.txt isis-git/src/CMakeLists.txt
--- IsisCMake/src/CMakeLists.txt	2017-04-12 17:01:28.000000000 -0700
+++ isis-git/src/CMakeLists.txt	2017-04-11 22:50:33.000000000 -0700
@@ -9,10 +9,10 @@
   # This folder is for under-development test code so if it is
   #  missing just ignore it.
   # - TODO: The install behavior should be disabled for this folder!
-  if(EXISTS ${CMAKE_CURRENT_LIST_DIR}/local)
-    message("Detected optional directory 'local'")
-    add_isis_module(local local)
-  endif()
+  #if(EXISTS ${CMAKE_CURRENT_LIST_DIR}/local)
+  #  message("Detected optional directory 'local'")
+  #  add_isis_module(local local)
+  #endif()
 
 endif()
 
diff -ruN IsisCMake/src/qisis/objs/FeatureNomenclatureTool/FeatureNomenclatureTool.cpp isis-git/src/qisis/objs/FeatureNomenclatureTool/FeatureNomenclatureTool.cpp
--- IsisCMake/src/qisis/objs/FeatureNomenclatureTool/FeatureNomenclatureTool.cpp	2017-04-12 17:01:35.000000000 -0700
+++ isis-git/src/qisis/objs/FeatureNomenclatureTool/FeatureNomenclatureTool.cpp	2017-04-11 22:19:11.000000000 -0700
@@ -18,10 +18,13 @@
 #include <QPushButton>
 #include <QSettings>
 #if defined(__APPLE__)
-#include <QtWebEngineWidgets/QWebEngineView>
+//#include <QtWebEngineWidgets/QWebEngineView>
 #else
-#include <QWebEngineView>
+//#include <QWebEngineView>
 #endif
+#include <QPainter>
+#include <QPen>
+#include <QUrl>
 
 #include <geos/geom/Coordinate.h>
 #include <geos/geom/CoordinateSequence.h>
diff -ruN IsisCMake/src/qisis/objs/QIsisApplication/QIsisApplication.cpp isis-git/src/qisis/objs/QIsisApplication/QIsisApplication.cpp
--- IsisCMake/src/qisis/objs/QIsisApplication/QIsisApplication.cpp	2017-04-12 17:01:35.000000000 -0700
+++ isis-git/src/qisis/objs/QIsisApplication/QIsisApplication.cpp	2017-04-11 22:19:11.000000000 -0700
@@ -7,10 +7,11 @@
 #include <QMessageBox>
 #include <QUrl>
 #if defined(__APPLE__)
-#include <QtWebEngineWidgets/QWebEngineView>
+//#include <QtWebEngineWidgets/QWebEngineView>
 #else
-#include <QWebEngineView>
+//#include <QWebEngineView>
 #endif
+#include <QUrl>
 
 #include "FileName.h"
 #include "IException.h"
@@ -65,9 +66,9 @@
    * Open a URL in the browser specified by Isis.
    */
   void QIsisApplication::openUrl(QUrl url) {
-     QWebEngineView *view = new QWebEngineView(NULL);
-     view->setAttribute(Qt::WA_DeleteOnClose);
-     view->load(url);
-     view->show();
+     //QWebEngineView *view = new QWebEngineView(NULL);
+     //view->setAttribute(Qt::WA_DeleteOnClose);
+     //view->load(url);
+     //view->show();
   }
 }
--- IsisCMake/src/base/objs/NaifDskApi/NaifDskApi.h      2017-04-12 17:01:35.000000000 -0700
+++ isis-git/src/base/objs/NaifDskApi/NaifDskApi.h       2017-04-11 22:19:11.000000000 -0700
@@ -36,1 +36,1 @@
-  #include <pl02.h>
+  //#include <pl02.h>
--- IsisCMake/src/base/objs/NaifDskApi/NaifDskApi.cpp      2017-04-12 17:01:35.000000000 -0700
+++ isis-git/src/base/objs/NaifDskApi/NaifDskApi.cpp       2017-04-11 22:19:11.000000000 -0700
@@ -32,1 +32,1 @@
-  #include <pl02.h>
+  //#include <pl02.h>
--- IsisCMake/src/base/objs/NaifDskPlateModel/NaifDskPlateModel.cpp      2017-04-12 17:01:35.000000000 -0700
+++ isis-git/src/base/objs/NaifDskPlateModel/NaifDskPlateModel.cpp       2017-04-11 22:19:11.000000000 -0700
@@ -45,1 +45,1 @@
-#include <dsk_proto.h>
+//#include <dsk_proto.h>
